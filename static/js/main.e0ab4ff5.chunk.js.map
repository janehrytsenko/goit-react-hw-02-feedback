{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","App.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","container","map","option","type","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","item","Notification","message","App","state","feedbackIncrement","setState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,oBCA1ED,EAAOC,QAAU,CAAC,UAAY,yB,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,gC,2ICgBbC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,iCCoBQI,MAxBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OACI,qBAAKL,UAAWC,IAAEK,UAAlB,SACKF,EAAQG,KAAI,SAAAC,GAAM,OACf,wBACIC,KAAK,SACLT,UAAWC,IAAES,OAEbC,QAAS,kBAAMN,EAAgBG,IAJnC,SAMKA,GAHIA,S,gBCWVI,MAlBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7C,OACI,qBAAIjB,UAAWC,IAAEiB,KAAjB,UACF,qBAAIlB,UAAWC,IAAEkB,KAAjB,mBAA8BN,KAC9B,qBAAIb,UAAWC,IAAEkB,KAAjB,sBAAiCL,KAC/B,qBAAId,UAAWC,IAAEkB,KAAjB,kBAA6BJ,KAC7B,qBAAIf,UAAWC,IAAEkB,KAAjB,oBAA+BH,KAC/B,qBAAIhB,UAAWC,IAAEkB,KAAjB,gCAA2CF,EAA3C,W,iBCCOG,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGrB,UAAWC,IAAEoB,QAAhB,SAA0BA,KC4CpBC,E,4MAxCbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,kBAAoB,SAAAhB,GAClB,EAAKiB,UAAS,SAAAF,GAAK,sBAAQf,EAASe,EAAMf,GAAU,O,EAItDkB,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAKtB,GAAN,OAAiBsB,EAAMtB,IAAQ,I,EAGzEuB,gCAAkC,WAAO,IAC/BlB,EAAS,EAAKU,MAAdV,KACR,OAAOmB,KAAKC,MAAOpB,EAAO,EAAKa,qBAAwB,MAAQ,G,uDAGvD,IAAD,EACwBQ,KAAKX,MAA5BV,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,sBAAKf,UAAWC,IAAEK,UAAlB,UACE,cAAC,EAAD,CAASR,MAAM,4BAAf,SACE,cAAC,EAAD,CAAiBO,gBAAiB6B,KAAKV,kBAAmBpB,QAASuB,OAAOQ,KAAKD,KAAKX,WAEtF,cAAC,EAAD,CAASzB,MAAM,aAAf,SACGoC,KAAKR,qBACJ,cAAC,EAAD,CAAYb,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOkB,KAAKR,qBAAsBT,mBAAoBiB,KAAKH,oCAE/G,cAAC,EAAD,CAAcV,QAAQ,+B,GAhChBe,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e0ab4ff5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\",\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__3xTKp\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n    return (\n        <div className={s.container}>\n            {options.map(option => (\n                <button\n                    type=\"button\"\n                    className={s.button}\n                    key={option}\n                    onClick={() => onLeaveFeedback(option)}\n                >\n                    {option}\n                </button>\n            ))}\n        </div>\n    )\n}\n\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css'\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n    return (\n        <ul className={s.list}>\n      <li className={s.item}>Good: {good}</li>\n      <li className={s.item}>Neutral: {neutral}</li>\n        <li className={s.item}>Bad: {bad}</li>\n        <li className={s.item}>Total: {total}</li>\n        <li className={s.item}>Positive feedback: {positivePercentage}%</li>\n    </ul>\n    )\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n};\n\nexport default Statistics","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport s from './App.module.css'\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  feedbackIncrement = option => {\n    this.setState(state => ({ [option]: state[option] + 1,\n  }))\n  }\n  \n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, option) => acc + option, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.countTotalFeedback()) * 100) || 0;\n  };\n  \n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className={s.container}>\n        <Section title=\"Please give your feedback\">\n          <FeedbackOptions onLeaveFeedback={this.feedbackIncrement} options={Object.keys(this.state)}/> \n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics good={good} neutral={neutral} bad={bad} total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage()} />\n            ) : (\n            <Notification message=\"NO FEEDBACK GIVEN\" />\n          )}\n         </Section>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}